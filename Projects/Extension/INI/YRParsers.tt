<#@ template debug="true" hostspecific="false" language="C#" #>
<#@ output extension=".g.cs" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

using PatcherYRpp;

<#
	List<string> yrTypeList = new(){
		"SuperWeaponTypeClass",
		"TechnoTypeClass",
		"WeaponTypeClass"
	};

	List<string> parserList = yrTypeList.Select(t => t + "Parser").ToList();
#>

namespace Extension.INI
{
    internal partial class YRParsers
    {
        public static partial void Register()
        {
<# foreach(string parser in parserList) { #>
            new <#= parser#>().Register();
<# } #>
        }
    }
    
<# for(int i = 0; i < parserList.Count; i++) { var parser = parserList[i]; var type = yrTypeList[i];#>
    public class <#= parser#> : FindTypeParser<<#= type#>>
    {
        public <#= parser#>() : base(<#= type#>.ABSTRACTTYPE_ARRAY)
        {

        }
    }
<# } #>
}
